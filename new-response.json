{
  "transaction": {
    "hash": "0xd5bedd465b6b82332dfc2a4a403482b38b792c71d8e8842d96a0224519478f07",
    "block_hash": "",
    "block_number": 14262229,
    "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
    "gas": 30000000,
    "gas_price": 0,
    "gas_fee_cap": 0,
    "gas_tip_cap": 0,
    "cumulative_gas_used": 0,
    "gas_used": 73490,
    "effective_gas_price": 0,
    "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000000b",
    "nonce": 0,
    "to": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
    "index": 0,
    "value": "0x",
    "access_list": null,
    "status": true,
    "addresses": [
      "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
      "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
      "0x53a328F4086d7C0F1Fa19e594c9b842125263026",
      "0x1a9C8182C09F50C8318d769245beA52c32BE35BC"
    ],
    "contract_ids": [
      "eth:1:0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
      "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc"
    ],
    "network_id": "1",
    "timestamp": "2022-02-23T12:32:27Z",
    "function_selector": "",
    "transaction_info": {
      "contract_id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "block_number": 14262229,
      "transaction_id": "0xd5bedd465b6b82332dfc2a4a403482b38b792c71d8e8842d96a0224519478f07",
      "contract_address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "method": "fallback",
      "parameters": null,
      "intrinsic_gas": 21204,
      "refund_gas": 0,
      "call_trace": {
        "hash": "0xd5bedd465b6b82332dfc2a4a403482b38b792c71d8e8842d96a0224519478f07",
        "contract_name": "GovernorBravoDelegator",
        "function_name": "fallback",
        "function_pc": 63,
        "function_op": "JUMPDEST",
        "function_file_index": 0,
        "function_code_start": 106,
        "function_line_number": 66,
        "function_code_length": 2870,
        "function_states": [
          {
            "soltype": {
              "name": "implementation",
              "type": "address",
              "storage_location": "storage",
              "components": null,
              "offset": 0,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
              "indexed": false,
              "simple_type": {
                "type": "address"
              }
            },
            "value": "0x53a328f4086d7c0f1fa19e594c9b842125263026"
          }
        ],
        "function_variables": [
          {
            "soltype": {
              "name": "success",
              "type": "bool",
              "storage_location": "default",
              "components": null,
              "offset": 0,
              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "indexed": false,
              "simple_type": {
                "type": "bool"
              }
            },
            "value": false
          }
        ],
        "absolute_position": 33,
        "caller_pc": 0,
        "caller_op": "CALL",
        "call_type": "CALL",
        "from": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
        "from_balance": "10000000000000000000",
        "to": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
        "to_balance": "0",
        "value": "0",
        "caller": {
          "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
          "balance": "10000000000000000000"
        },
        "block_timestamp": "0001-01-01T00:00:00Z",
        "gas": 29978796,
        "gas_used": 52286,
        "intrinsic_gas": 21204,
        "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000000b",
        "state_diff": [
          {
            "soltype": null,
            "original": null,
            "dirty": null,
            "raw": [
              {
                "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
                "key": "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0447",
                "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
              }
            ]
          }
        ],
        "logs": [
          {
            "name": "ProposalExecuted",
            "anonymous": false,
            "inputs": [
              {
                "soltype": {
                  "name": "id",
                  "type": "uint256",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                "value": "11"
              }
            ],
            "raw": {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "topics": [
                "0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f"
              ],
              "data": "0x000000000000000000000000000000000000000000000000000000000000000b"
            }
          }
        ],
        "output": "0x",
        "decoded_output": null,
        "network_id": "1",
        "calls": [
          {
            "hash": "",
            "contract_name": "GovernorBravoDelegator",
            "function_name": "execute",
            "function_pc": 7606,
            "function_op": "JUMPDEST",
            "function_file_index": 0,
            "function_code_start": 7442,
            "function_line_number": 141,
            "function_code_length": 575,
            "absolute_position": 678,
            "caller_pc": 107,
            "caller_op": "DELEGATECALL",
            "caller_file_index": 0,
            "caller_line_number": 68,
            "caller_code_start": 2626,
            "caller_code_length": 37,
            "call_type": "DELEGATECALL",
            "from": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
            "from_balance": "0",
            "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
            "to_balance": "0",
            "value": null,
            "caller": {
              "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
              "balance": "10000000000000000000"
            },
            "block_timestamp": "0001-01-01T00:00:00Z",
            "gas": 29505335,
            "gas_used": 47066,
            "refund_gas": 468338,
            "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000000b",
            "decoded_input": [
              {
                "soltype": {
                  "name": "proposalId",
                  "type": "uint256",
                  "storage_location": "default",
                  "components": null,
                  "offset": 0,
                  "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                  "indexed": false,
                  "simple_type": {
                    "type": "uint"
                  }
                },
                "value": "11"
              }
            ],
            "output": "0x",
            "decoded_output": null,
            "network_id": "",
            "calls": [
              {
                "hash": "",
                "contract_name": "GovernorBravoDelegate",
                "function_name": "state",
                "function_pc": 3592,
                "function_op": "JUMPDEST",
                "function_file_index": 0,
                "function_code_start": 9971,
                "function_line_number": 194,
                "function_code_length": 1059,
                "function_variables": [
                  {
                    "soltype": {
                      "name": "proposal",
                      "type": "tuple",
                      "storage_location": "memory",
                      "components": [
                        {
                          "name": "id",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "proposer",
                          "type": "address",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "address"
                          }
                        },
                        {
                          "name": "eta",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "targets",
                          "type": "address[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "address"
                            }
                          }
                        },
                        {
                          "name": "values",
                          "type": "uint256[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "uint"
                            }
                          }
                        },
                        {
                          "name": "signatures",
                          "type": "string[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "name": "calldatas",
                          "type": "bytes[]",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "slice",
                            "nested_type": {
                              "type": "bytes"
                            }
                          }
                        },
                        {
                          "name": "startBlock",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "endBlock",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "forVotes",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "againstVotes",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "abstainVotes",
                          "type": "uint256",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        {
                          "name": "canceled",
                          "type": "bool",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "bool"
                          }
                        },
                        {
                          "name": "executed",
                          "type": "bool",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "bool"
                          }
                        },
                        {
                          "name": "receipts",
                          "type": "mapping (address => (bool,uint8,uint96))",
                          "storage_location": "memory",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false
                        }
                      ],
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false
                    },
                    "value": null
                  }
                ],
                "absolute_position": 242,
                "caller_pc": 7616,
                "caller_op": "JUMP",
                "caller_file_index": 0,
                "caller_line_number": 142,
                "caller_code_start": 7512,
                "caller_code_length": 17,
                "call_type": "JUMPDEST",
                "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                "from_balance": null,
                "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                "to_balance": null,
                "value": null,
                "caller": {
                  "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
                  "balance": "10000000000000000000"
                },
                "block_timestamp": "0001-01-01T00:00:00Z",
                "gas": 29504865,
                "gas_used": 23045,
                "input": "0x",
                "decoded_input": [
                  {
                    "soltype": {
                      "name": "proposalId",
                      "type": "uint256",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    "value": "11"
                  }
                ],
                "output": "0x",
                "decoded_output": [
                  {
                    "soltype": {
                      "name": "",
                      "type": "uint256",
                      "storage_location": "default",
                      "components": null,
                      "offset": 0,
                      "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                      "indexed": false,
                      "simple_type": {
                        "type": "uint"
                      }
                    },
                    "value": "5"
                  }
                ],
                "network_id": "",
                "calls": [
                  {
                    "hash": "",
                    "contract_name": "GovernorBravoDelegate",
                    "function_pc": 0,
                    "function_op": "STOP",
                    "absolute_position": 457,
                    "caller_pc": 3898,
                    "caller_op": "STATICCALL",
                    "caller_file_index": 0,
                    "caller_line_number": 209,
                    "caller_code_start": 10882,
                    "caller_code_length": 23,
                    "caller_variables": [
                      {
                        "soltype": {
                          "name": "proposal",
                          "type": "tuple",
                          "storage_location": "memory",
                          "components": [
                            {
                              "name": "id",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "proposer",
                              "type": "address",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "address"
                              }
                            },
                            {
                              "name": "eta",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "targets",
                              "type": "address[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "address"
                                }
                              }
                            },
                            {
                              "name": "values",
                              "type": "uint256[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "uint"
                                }
                              }
                            },
                            {
                              "name": "signatures",
                              "type": "string[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "name": "calldatas",
                              "type": "bytes[]",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "slice",
                                "nested_type": {
                                  "type": "bytes"
                                }
                              }
                            },
                            {
                              "name": "startBlock",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "endBlock",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "forVotes",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "againstVotes",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "abstainVotes",
                              "type": "uint256",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "uint"
                              }
                            },
                            {
                              "name": "canceled",
                              "type": "bool",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bool"
                              }
                            },
                            {
                              "name": "executed",
                              "type": "bool",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false,
                              "simple_type": {
                                "type": "bool"
                              }
                            },
                            {
                              "name": "receipts",
                              "type": "mapping (address => (bool,uint8,uint96))",
                              "storage_location": "memory",
                              "components": null,
                              "offset": 0,
                              "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                              "indexed": false
                            }
                          ],
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false
                        },
                        "value": null
                      }
                    ],
                    "call_type": "STATICCALL",
                    "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                    "from_balance": "0",
                    "to": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
                    "to_balance": "1659833684664797",
                    "value": null,
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 29021785,
                    "gas_used": 220,
                    "refund_gas": 460663,
                    "input": "0xc1a287e2",
                    "output": "0x0000000000000000000000000000000000000000000000000000000000127500",
                    "decoded_output": null,
                    "network_id": "",
                    "calls": null
                  },
                  {
                    "hash": "",
                    "contract_name": "GovernorBravoDelegate",
                    "function_name": "add256",
                    "function_pc": 8549,
                    "function_op": "JUMPDEST",
                    "function_file_index": 0,
                    "function_code_start": 18411,
                    "function_line_number": 371,
                    "function_code_length": 166,
                    "absolute_position": 547,
                    "caller_pc": 3955,
                    "caller_op": "JUMP",
                    "caller_file_index": 0,
                    "caller_line_number": 209,
                    "caller_code_start": 10861,
                    "caller_code_length": 45,
                    "call_type": "JUMPDEST",
                    "from": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                    "from_balance": null,
                    "to": "0x53a328f4086d7c0f1fa19e594c9b842125263026",
                    "to_balance": null,
                    "value": null,
                    "caller": {
                      "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073",
                      "balance": "10000000000000000000"
                    },
                    "block_timestamp": "0001-01-01T00:00:00Z",
                    "gas": 29481926,
                    "gas_used": 59,
                    "input": "0x",
                    "decoded_input": [
                      {
                        "soltype": {
                          "name": "a",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1645619547"
                      },
                      {
                        "soltype": {
                          "name": "b",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1209600"
                      }
                    ],
                    "output": "0x",
                    "decoded_output": [
                      {
                        "soltype": {
                          "name": "",
                          "type": "uint256",
                          "storage_location": "default",
                          "components": null,
                          "offset": 0,
                          "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "indexed": false,
                          "simple_type": {
                            "type": "uint"
                          }
                        },
                        "value": "1646829147"
                      }
                    ],
                    "network_id": "",
                    "calls": null
                  }
                ]
              }
            ]
          }
        ]
      },
      "stack_trace": null,
      "logs": [
        {
          "name": "ProposalExecuted",
          "anonymous": false,
          "inputs": [
            {
              "soltype": {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              "value": "11"
            }
          ],
          "raw": {
            "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
            "topics": [
              "0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f"
            ],
            "data": "0x000000000000000000000000000000000000000000000000000000000000000b"
          }
        }
      ],
      "state_diff": [
        {
          "soltype": null,
          "original": null,
          "dirty": null,
          "raw": [
            {
              "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
              "key": "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0447",
              "original": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "dirty": "0x0000000000000000000000000000000000000000000000000000000000000100"
            }
          ]
        }
      ],
      "raw_state_diff": null,
      "console_logs": null,
      "created_at": "2022-02-23T12:32:27Z"
    },
    "method": "",
    "decoded_input": null
  },
  "simulation": {
    "id": "0f12a36e-8305-4d20-a123-9c21e8a7c0d2",
    "project_id": "0c756dbb-4252-4f47-8168-df9186108a1a",
    "owner_id": "a688d548-0bb7-427f-9870-56f0bc7554ed",
    "network_id": "1",
    "block_number": 14262229,
    "transaction_index": 0,
    "from": "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073",
    "to": "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
    "input": "0xfe0d94c1000000000000000000000000000000000000000000000000000000000000000b",
    "gas": 30000000,
    "gas_price": "0",
    "value": "0",
    "method": "execute",
    "status": true,
    "access_list": null,
    "queue_origin": "",
    "block_header": {
      "number": "0xd99fd5",
      "hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "stateRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "sha3Uncles": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "transactionsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "receiptsRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "logsBloom": "0x
      "timestamp": "0x6216295b",
      "difficulty": null,
      "gasLimit": null,
      "gasUsed": null,
      "miner": "0x0000000000000000000000000000000000000000",
      "extraData": "0x",
      "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "nonce": "0x0000000000000000",
      "transactions": null,
      "baseFeePerGas": "0x0"
    },
    "state_overrides": {
      "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": {
        "balance": 0,
        "storage": {
          "0xf24571af1c9c9feb8fb4e4db9131ce568fa73255bfb5ff8dc04164f9430405a8": "0x0000000000000000000000000000000000000000000000000000000000000001"
        }
      },
      "0x408ED6354d4973f66138C91495F2f2FCbd8724C3": {
        "balance": 0,
        "storage": {
          "0x7": "0x000000000000000000000000000000000000000000000000000000000000000b",
          "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f043d": "0x000000000000000000000000000000000000000000000000000000006216295b",
          "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0444": "0x0000000000000000000000000000000000000000033b2e3c9fd0803ce8000000",
          "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0445": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0446": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0447": "0x0000000000000000000000000000000000000000000000000000000000000000"
        }
      },
      "0xD73a92Be73EfbFcF3854433A5FcbAbF9c1316073": {
        "balance": 10000000000000000000
      }
    },
    "created_at": "2022-02-23T12:33:22.563790428Z"
  },
  "contracts": [
    {
      "id": "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "contract_id": "eth:1:0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
      "contract_name": "Timelock",
      "ens_domain": null,
      "type": "contract",
      "evm_version": "",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": true,
      "optimization_runs": 999999,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "Timelock.sol",
            "name": "Timelock.sol",
            "source": "/**\r\n *Submitted for verification at Etherscan.io on 2020-09-14\r\n*/\r\n\r\npragma solidity ^0.5.16;\r\n\r\n// From https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/Math.sol\r\n// Subject to the MIT license.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, errorMessage);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot underflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction underflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot underflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, errorMessage);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers.\r\n     * Reverts on division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers.\r\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ncontract Timelock {\r\n    using SafeMath for uint;\r\n\r\n    event NewAdmin(address indexed newAdmin);\r\n    event NewPendingAdmin(address indexed newPendingAdmin);\r\n    event NewDelay(uint indexed newDelay);\r\n    event CancelTransaction(bytes32 indexed txHash, address indexed target, uint value, string signature,  bytes data, uint eta);\r\n    event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint value, string signature,  bytes data, uint eta);\r\n    event QueueTransaction(bytes32 indexed txHash, address indexed target, uint value, string signature, bytes data, uint eta);\r\n\r\n    uint public constant GRACE_PERIOD = 14 days;\r\n    uint public constant MINIMUM_DELAY = 2 days;\r\n    uint public constant MAXIMUM_DELAY = 30 days;\r\n\r\n    address public admin;\r\n    address public pendingAdmin;\r\n    uint public delay;\r\n\r\n    mapping (bytes32 => bool) public queuedTransactions;\r\n\r\n\r\n    constructor(address admin_, uint delay_) public {\r\n        require(delay_ >= MINIMUM_DELAY, \"Timelock::constructor: Delay must exceed minimum delay.\");\r\n        require(delay_ <= MAXIMUM_DELAY, \"Timelock::setDelay: Delay must not exceed maximum delay.\");\r\n\r\n        admin = admin_;\r\n        delay = delay_;\r\n    }\r\n\r\n    function() external payable { }\r\n\r\n    function setDelay(uint delay_) public {\r\n        require(msg.sender == address(this), \"Timelock::setDelay: Call must come from Timelock.\");\r\n        require(delay_ >= MINIMUM_DELAY, \"Timelock::setDelay: Delay must exceed minimum delay.\");\r\n        require(delay_ <= MAXIMUM_DELAY, \"Timelock::setDelay: Delay must not exceed maximum delay.\");\r\n        delay = delay_;\r\n\r\n        emit NewDelay(delay);\r\n    }\r\n\r\n    function acceptAdmin() public {\r\n        require(msg.sender == pendingAdmin, \"Timelock::acceptAdmin: Call must come from pendingAdmin.\");\r\n        admin = msg.sender;\r\n        pendingAdmin = address(0);\r\n\r\n        emit NewAdmin(admin);\r\n    }\r\n\r\n    function setPendingAdmin(address pendingAdmin_) public {\r\n        require(msg.sender == address(this), \"Timelock::setPendingAdmin: Call must come from Timelock.\");\r\n        pendingAdmin = pendingAdmin_;\r\n\r\n        emit NewPendingAdmin(pendingAdmin);\r\n    }\r\n\r\n    function queueTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public returns (bytes32) {\r\n        require(msg.sender == admin, \"Timelock::queueTransaction: Call must come from admin.\");\r\n        require(eta >= getBlockTimestamp().add(delay), \"Timelock::queueTransaction: Estimated execution block must satisfy delay.\");\r\n\r\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\r\n        queuedTransactions[txHash] = true;\r\n\r\n        emit QueueTransaction(txHash, target, value, signature, data, eta);\r\n        return txHash;\r\n    }\r\n\r\n    function cancelTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public {\r\n        require(msg.sender == admin, \"Timelock::cancelTransaction: Call must come from admin.\");\r\n\r\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\r\n        queuedTransactions[txHash] = false;\r\n\r\n        emit CancelTransaction(txHash, target, value, signature, data, eta);\r\n    }\r\n\r\n    function executeTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public payable returns (bytes memory) {\r\n        require(msg.sender == admin, \"Timelock::executeTransaction: Call must come from admin.\");\r\n\r\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\r\n        require(queuedTransactions[txHash], \"Timelock::executeTransaction: Transaction hasn't been queued.\");\r\n        require(getBlockTimestamp() >= eta, \"Timelock::executeTransaction: Transaction hasn't surpassed time lock.\");\r\n        require(getBlockTimestamp() <= eta.add(GRACE_PERIOD), \"Timelock::executeTransaction: Transaction is stale.\");\r\n\r\n        queuedTransactions[txHash] = false;\r\n\r\n        bytes memory callData;\r\n\r\n        if (bytes(signature).length == 0) {\r\n            callData = data;\r\n        } else {\r\n            callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\r\n        }\r\n\r\n        // solium-disable-next-line security/no-call-value\r\n        (bool success, bytes memory returnData) = target.call.value(value)(callData);\r\n        require(success, \"Timelock::executeTransaction: Transaction execution reverted.\");\r\n\r\n        emit ExecuteTransaction(txHash, target, value, signature, data, eta);\r\n\r\n        return returnData;\r\n    }\r\n\r\n    function getBlockTimestamp() internal view returns (uint) {\r\n        // solium-disable-next-line security/no-block-members\r\n        return block.timestamp;\r\n    }\r\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "admin_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "delay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "function",
            "name": "setDelay",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "delay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "GRACE_PERIOD",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "executeTransaction",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "pendingAdmin",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAXIMUM_DELAY",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MINIMUM_DELAY",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "admin",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "delay",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "acceptAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [],
            "outputs": []
          },
          {
            "type": "function",
            "name": "queuedTransactions",
            "constant": true,
            "anonymous": false,
            "inputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "queueTransaction",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "cancelTransaction",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "setPendingAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "pendingAdmin_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "event",
            "name": "NewDelay",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewPendingAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "QueueTransaction",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "CancelTransaction",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ExecuteTransaction",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "txHash",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "target",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "value",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "signature",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              },
              {
                "name": "data",
                "type": "bytes",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": null,
        "states": [
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "delay",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "queuedTransactions",
            "type": "mapping (bytes32 => bool)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2020-09-16T20:19:49Z",
      "number_of_watches": null,
      "language": "solidity",
      "in_project": false,
      "number_of_files": 1
    },
    {
      "id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "contract_id": "eth:1:0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
      "contract_name": "GovernorBravoDelegator",
      "ens_domain": null,
      "type": "contract",
      "evm_version": "",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": true,
      "optimization_runs": 200,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "contracts/GovernorBravoDelegator.sol",
            "name": "GovernorBravoDelegator.sol",
            "source": "pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./GovernorBravoInterfaces.sol\";\r\n\r\ncontract GovernorBravoDelegator is GovernorBravoDelegatorStorage, GovernorBravoEvents {\r\n\tconstructor(\r\n\t\t\taddress timelock_,\r\n\t\t\taddress uni_,\r\n\t\t\taddress admin_,\r\n\t        address implementation_,\r\n\t        uint votingPeriod_,\r\n\t        uint votingDelay_,\r\n            uint proposalThreshold_) public {\r\n\r\n        // Admin set to msg.sender for initialization\r\n        admin = msg.sender;\r\n\r\n        delegateTo(implementation_, abi.encodeWithSignature(\"initialize(address,address,uint256,uint256,uint256)\",\r\n                                                            timelock_,\r\n                                                            uni_,\r\n                                                            votingPeriod_,\r\n                                                            votingDelay_,\r\n                                                            proposalThreshold_));\r\n\r\n        _setImplementation(implementation_);\r\n\r\n\t\tadmin = admin_;\r\n\t}\r\n\r\n\r\n\t/**\r\n     * @notice Called by the admin to update the implementation of the delegator\r\n     * @param implementation_ The address of the new implementation for delegation\r\n     */\r\n    function _setImplementation(address implementation_) public {\r\n        require(msg.sender == admin, \"GovernorBravoDelegator::_setImplementation: admin only\");\r\n        require(implementation_ != address(0), \"GovernorBravoDelegator::_setImplementation: invalid implementation address\");\r\n\r\n        address oldImplementation = implementation;\r\n        implementation = implementation_;\r\n\r\n        emit NewImplementation(oldImplementation, implementation);\r\n    }\r\n\r\n    /**\r\n     * @notice Internal method to delegate execution to another contract\r\n     * @dev It returns to the external caller whatever the implementation returns or forwards reverts\r\n     * @param callee The contract to delegatecall\r\n     * @param data The raw data to delegatecall\r\n     */\r\n    function delegateTo(address callee, bytes memory data) internal {\r\n        (bool success, bytes memory returnData) = callee.delegatecall(data);\r\n        assembly {\r\n            if eq(success, 0) {\r\n                revert(add(returnData, 0x20), returndatasize)\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n     * @dev Delegates execution to an implementation contract.\r\n     * It returns to the external caller whatever the implementation returns\r\n     * or forwards reverts.\r\n     */\r\n    function () external payable {\r\n        // delegate all other functions to current implementation\r\n        (bool success, ) = implementation.delegatecall(msg.data);\r\n\r\n        assembly {\r\n              let free_mem_ptr := mload(0x40)\r\n              returndatacopy(free_mem_ptr, 0, returndatasize)\r\n\r\n              switch success\r\n              case 0 { revert(free_mem_ptr, returndatasize) }\r\n              default { return(free_mem_ptr, returndatasize) }\r\n        }\r\n    }\r\n}"
          },
          {
            "id": 1,
            "path": "contracts/GovernorBravoInterfaces.sol",
            "name": "GovernorBravoInterfaces.sol",
            "source": "pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract GovernorBravoEvents {\r\n    /// @notice An event emitted when a new proposal is created\r\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\r\n\r\n    /// @notice An event emitted when a vote has been cast on a proposal\r\n    /// @param voter The address which casted a vote\r\n    /// @param proposalId The proposal id which was voted on\r\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\r\n    /// @param votes Number of votes which were cast by the voter\r\n    /// @param reason The reason given for the vote by the voter\r\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\r\n\r\n    /// @notice An event emitted when a proposal has been canceled\r\n    event ProposalCanceled(uint id);\r\n\r\n    /// @notice An event emitted when a proposal has been queued in the Timelock\r\n    event ProposalQueued(uint id, uint eta);\r\n\r\n    /// @notice An event emitted when a proposal has been executed in the Timelock\r\n    event ProposalExecuted(uint id);\r\n\r\n    /// @notice An event emitted when the voting delay is set\r\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\r\n\r\n    /// @notice An event emitted when the voting period is set\r\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\r\n\r\n    /// @notice Emitted when implementation is changed\r\n    event NewImplementation(address oldImplementation, address newImplementation);\r\n\r\n    /// @notice Emitted when proposal threshold is set\r\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\r\n\r\n    /// @notice Emitted when pendingAdmin is changed\r\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\r\n\r\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\r\n    event NewAdmin(address oldAdmin, address newAdmin);\r\n}\r\n\r\ncontract GovernorBravoDelegatorStorage {\r\n    /// @notice Administrator for this contract\r\n    address public admin;\r\n\r\n    /// @notice Pending administrator for this contract\r\n    address public pendingAdmin;\r\n\r\n    /// @notice Active brains of Governor\r\n    address public implementation;\r\n}\r\n\r\n\r\n/**\r\n * @title Storage for Governor Bravo Delegate\r\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\r\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\r\n * GovernorBravoDelegateStorageVX.\r\n */\r\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\r\n\r\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\r\n    uint public votingDelay;\r\n\r\n    /// @notice The duration of voting on a proposal, in blocks\r\n    uint public votingPeriod;\r\n\r\n    /// @notice The number of votes required in order for a voter to become a proposer\r\n    uint public proposalThreshold;\r\n\r\n    /// @notice Initial proposal id set at become\r\n    uint public initialProposalId;\r\n\r\n    /// @notice The total number of proposals\r\n    uint public proposalCount;\r\n\r\n    /// @notice The address of the Uniswap Protocol Timelock\r\n    TimelockInterface public timelock;\r\n\r\n    /// @notice The address of the Uniswap governance token\r\n    UniInterface public uni;\r\n\r\n    /// @notice The official record of all proposals ever proposed\r\n    mapping (uint => Proposal) public proposals;\r\n\r\n    /// @notice The latest proposal for each proposer\r\n    mapping (address => uint) public latestProposalIds;\r\n\r\n\r\n    struct Proposal {\r\n        /// @notice Unique id for looking up a proposal\r\n        uint id;\r\n\r\n        /// @notice Creator of the proposal\r\n        address proposer;\r\n\r\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\r\n        uint eta;\r\n\r\n        /// @notice the ordered list of target addresses for calls to be made\r\n        address[] targets;\r\n\r\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\r\n        uint[] values;\r\n\r\n        /// @notice The ordered list of function signatures to be called\r\n        string[] signatures;\r\n\r\n        /// @notice The ordered list of calldata to be passed to each call\r\n        bytes[] calldatas;\r\n\r\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\r\n        uint startBlock;\r\n\r\n        /// @notice The block at which voting ends: votes must be cast prior to this block\r\n        uint endBlock;\r\n\r\n        /// @notice Current number of votes in favor of this proposal\r\n        uint forVotes;\r\n\r\n        /// @notice Current number of votes in opposition to this proposal\r\n        uint againstVotes;\r\n\r\n        /// @notice Current number of votes for abstaining for this proposal\r\n        uint abstainVotes;\r\n\r\n        /// @notice Flag marking whether the proposal has been canceled\r\n        bool canceled;\r\n\r\n        /// @notice Flag marking whether the proposal has been executed\r\n        bool executed;\r\n\r\n        /// @notice Receipts of ballots for the entire set of voters\r\n        mapping (address => Receipt) receipts;\r\n    }\r\n\r\n    /// @notice Ballot receipt record for a voter\r\n    struct Receipt {\r\n        /// @notice Whether or not a vote has been cast\r\n        bool hasVoted;\r\n\r\n        /// @notice Whether or not the voter supports the proposal or abstains\r\n        uint8 support;\r\n\r\n        /// @notice The number of votes the voter had, which were cast\r\n        uint96 votes;\r\n    }\r\n\r\n    /// @notice Possible states that a proposal may be in\r\n    enum ProposalState {\r\n        Pending,\r\n        Active,\r\n        Canceled,\r\n        Defeated,\r\n        Succeeded,\r\n        Queued,\r\n        Expired,\r\n        Executed\r\n    }\r\n}\r\n\r\ninterface TimelockInterface {\r\n    function delay() external view returns (uint);\r\n    function GRACE_PERIOD() external view returns (uint);\r\n    function acceptAdmin() external;\r\n    function queuedTransactions(bytes32 hash) external view returns (bool);\r\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\r\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\r\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\r\n}\r\n\r\ninterface UniInterface {\r\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\r\n}\r\n\r\ninterface GovernorAlpha {\r\n    /// @notice The total number of proposals\r\n    function proposalCount() external returns (uint);\r\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "timelock_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "uni_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "admin_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "implementation_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "votingPeriod_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votingDelay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposalThreshold_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "function",
            "name": "pendingAdmin",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setImplementation",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "implementation_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "admin",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "implementation",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "event",
            "name": "VotingPeriodSet",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewImplementation",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewPendingAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCreated",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VoteCast",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingDelaySet",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalExecuted",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCanceled",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalQueued",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalThresholdSet",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": null,
        "states": [
          {
            "name": "implementation",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2021-08-20T01:14:14Z",
      "number_of_watches": null,
      "language": "solidity",
      "in_project": false,
      "number_of_files": 2
    },
    {
      "id": "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "contract_id": "eth:1:0x53a328f4086d7c0f1fa19e594c9b842125263026",
      "balance": "",
      "network_id": "1",
      "public": true,
      "export": false,
      "verified_by": "etherscan",
      "verification_date": null,
      "address": "0x53a328F4086d7C0F1Fa19e594c9b842125263026",
      "contract_name": "GovernorBravoDelegate",
      "ens_domain": null,
      "type": "contract",
      "evm_version": "",
      "compiler_version": "v0.5.16+commit.9c3226ce",
      "optimizations_used": true,
      "optimization_runs": 200,
      "libraries": null,
      "data": {
        "main_contract": 0,
        "contract_info": [
          {
            "id": 0,
            "path": "contracts/GovernorBravoDelegate.sol",
            "name": "GovernorBravoDelegate.sol",
            "source": "pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./GovernorBravoInterfaces.sol\";\r\n\r\ncontract GovernorBravoDelegate is GovernorBravoDelegateStorageV1, GovernorBravoEvents {\r\n\r\n    /// @notice The name of this contract\r\n    string public constant name = \"Uniswap Governor Bravo\";\r\n\r\n    /// @notice The minimum setable proposal threshold\r\n    uint public constant MIN_PROPOSAL_THRESHOLD = 1000000e18; // 1,000,000 Uni\r\n\r\n    /// @notice The maximum setable proposal threshold\r\n    uint public constant MAX_PROPOSAL_THRESHOLD = 10000000e18; //10,000,000 Uni\r\n\r\n    /// @notice The minimum setable voting period\r\n    uint public constant MIN_VOTING_PERIOD = 5760; // About 24 hours\r\n\r\n    /// @notice The max setable voting period\r\n    uint public constant MAX_VOTING_PERIOD = 80640; // About 2 weeks\r\n\r\n    /// @notice The min setable voting delay\r\n    uint public constant MIN_VOTING_DELAY = 1;\r\n\r\n    /// @notice The max setable voting delay\r\n    uint public constant MAX_VOTING_DELAY = 40320; // About 1 week\r\n\r\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\r\n    uint public constant quorumVotes = 40000000e18; // 40,000,000 = 4% of Uni\r\n\r\n    /// @notice The maximum number of actions that can be included in a proposal\r\n    uint public constant proposalMaxOperations = 10; // 10 actions\r\n\r\n    /// @notice The EIP-712 typehash for the contract's domain\r\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\r\n\r\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\r\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\"Ballot(uint256 proposalId,uint8 support)\");\r\n\r\n    /**\r\n      * @notice Used to initialize the contract during delegator contructor\r\n      * @param timelock_ The address of the Timelock\r\n      * @param uni_ The address of the Uni token\r\n      * @param votingPeriod_ The initial voting period\r\n      * @param votingDelay_ The initial voting delay\r\n      * @param proposalThreshold_ The initial proposal threshold\r\n      */\r\n    function initialize(address timelock_, address uni_, uint votingPeriod_, uint votingDelay_, uint proposalThreshold_) public {\r\n        require(address(timelock) == address(0), \"GovernorBravo::initialize: can only initialize once\");\r\n        require(msg.sender == admin, \"GovernorBravo::initialize: admin only\");\r\n        require(timelock_ != address(0), \"GovernorBravo::initialize: invalid timelock address\");\r\n        require(uni_ != address(0), \"GovernorBravo::initialize: invalid uni address\");\r\n        require(votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD, \"GovernorBravo::initialize: invalid voting period\");\r\n        require(votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY, \"GovernorBravo::initialize: invalid voting delay\");\r\n        require(proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD && proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD, \"GovernorBravo::initialize: invalid proposal threshold\");\r\n\r\n        timelock = TimelockInterface(timelock_);\r\n        uni = UniInterface(uni_);\r\n        votingPeriod = votingPeriod_;\r\n        votingDelay = votingDelay_;\r\n        proposalThreshold = proposalThreshold_;\r\n    }\r\n\r\n    /**\r\n      * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\r\n      * @param targets Target addresses for proposal calls\r\n      * @param values Eth values for proposal calls\r\n      * @param signatures Function signatures for proposal calls\r\n      * @param calldatas Calldatas for proposal calls\r\n      * @param description String description of the proposal\r\n      * @return Proposal id of new proposal\r\n      */\r\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\r\n        // Reject proposals before initiating as Governor\r\n        require(initialProposalId != 0, \"GovernorBravo::propose: Governor Bravo not active\");\r\n        require(uni.getPriorVotes(msg.sender, sub256(block.number, 1)) > proposalThreshold, \"GovernorBravo::propose: proposer votes below proposal threshold\");\r\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \"GovernorBravo::propose: proposal function information arity mismatch\");\r\n        require(targets.length != 0, \"GovernorBravo::propose: must provide actions\");\r\n        require(targets.length <= proposalMaxOperations, \"GovernorBravo::propose: too many actions\");\r\n\r\n        uint latestProposalId = latestProposalIds[msg.sender];\r\n        if (latestProposalId != 0) {\r\n          ProposalState proposersLatestProposalState = state(latestProposalId);\r\n          require(proposersLatestProposalState != ProposalState.Active, \"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\");\r\n          require(proposersLatestProposalState != ProposalState.Pending, \"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\");\r\n        }\r\n\r\n        uint startBlock = add256(block.number, votingDelay);\r\n        uint endBlock = add256(startBlock, votingPeriod);\r\n\r\n        proposalCount++;\r\n        Proposal memory newProposal = Proposal({\r\n            id: proposalCount,\r\n            proposer: msg.sender,\r\n            eta: 0,\r\n            targets: targets,\r\n            values: values,\r\n            signatures: signatures,\r\n            calldatas: calldatas,\r\n            startBlock: startBlock,\r\n            endBlock: endBlock,\r\n            forVotes: 0,\r\n            againstVotes: 0,\r\n            abstainVotes: 0,\r\n            canceled: false,\r\n            executed: false\r\n        });\r\n\r\n        proposals[newProposal.id] = newProposal;\r\n        latestProposalIds[newProposal.proposer] = newProposal.id;\r\n\r\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\r\n        return newProposal.id;\r\n    }\r\n\r\n    /**\r\n      * @notice Queues a proposal of state succeeded\r\n      * @param proposalId The id of the proposal to queue\r\n      */\r\n    function queue(uint proposalId) external {\r\n        require(state(proposalId) == ProposalState.Succeeded, \"GovernorBravo::queue: proposal can only be queued if it is succeeded\");\r\n        Proposal storage proposal = proposals[proposalId];\r\n        uint eta = add256(block.timestamp, timelock.delay());\r\n        for (uint i = 0; i < proposal.targets.length; i++) {\r\n            queueOrRevertInternal(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\r\n        }\r\n        proposal.eta = eta;\r\n        emit ProposalQueued(proposalId, eta);\r\n    }\r\n\r\n    function queueOrRevertInternal(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\r\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\");\r\n        timelock.queueTransaction(target, value, signature, data, eta);\r\n    }\r\n\r\n    /**\r\n      * @notice Executes a queued proposal if eta has passed\r\n      * @param proposalId The id of the proposal to execute\r\n      */\r\n    function execute(uint proposalId) external payable {\r\n        require(state(proposalId) == ProposalState.Queued, \"GovernorBravo::execute: proposal can only be executed if it is queued\");\r\n        Proposal storage proposal = proposals[proposalId];\r\n        proposal.executed = true;\r\n        for (uint i = 0; i < proposal.targets.length; i++) {\r\n            timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\r\n        }\r\n        emit ProposalExecuted(proposalId);\r\n    }\r\n\r\n    /**\r\n      * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\r\n      * @param proposalId The id of the proposal to cancel\r\n      */\r\n    function cancel(uint proposalId) external {\r\n        require(state(proposalId) != ProposalState.Executed, \"GovernorBravo::cancel: cannot cancel executed proposal\");\r\n\r\n        Proposal storage proposal = proposals[proposalId];\r\n        require(msg.sender == proposal.proposer || uni.getPriorVotes(proposal.proposer, sub256(block.number, 1)) < proposalThreshold, \"GovernorBravo::cancel: proposer above threshold\");\r\n\r\n        proposal.canceled = true;\r\n        for (uint i = 0; i < proposal.targets.length; i++) {\r\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\r\n        }\r\n\r\n        emit ProposalCanceled(proposalId);\r\n    }\r\n\r\n    /**\r\n      * @notice Gets actions of a proposal\r\n      * @param proposalId the id of the proposal\r\n      * @return Targets, values, signatures, and calldatas of the proposal actions\r\n      */\r\n    function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\r\n        Proposal storage p = proposals[proposalId];\r\n        return (p.targets, p.values, p.signatures, p.calldatas);\r\n    }\r\n\r\n    /**\r\n      * @notice Gets the receipt for a voter on a given proposal\r\n      * @param proposalId the id of proposal\r\n      * @param voter The address of the voter\r\n      * @return The voting receipt\r\n      */\r\n    function getReceipt(uint proposalId, address voter) external view returns (Receipt memory) {\r\n        return proposals[proposalId].receipts[voter];\r\n    }\r\n\r\n    /**\r\n      * @notice Gets the state of a proposal\r\n      * @param proposalId The id of the proposal\r\n      * @return Proposal state\r\n      */\r\n    function state(uint proposalId) public view returns (ProposalState) {\r\n        require(proposalCount >= proposalId && proposalId > initialProposalId, \"GovernorBravo::state: invalid proposal id\");\r\n        Proposal storage proposal = proposals[proposalId];\r\n        if (proposal.canceled) {\r\n            return ProposalState.Canceled;\r\n        } else if (block.number <= proposal.startBlock) {\r\n            return ProposalState.Pending;\r\n        } else if (block.number <= proposal.endBlock) {\r\n            return ProposalState.Active;\r\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\r\n            return ProposalState.Defeated;\r\n        } else if (proposal.eta == 0) {\r\n            return ProposalState.Succeeded;\r\n        } else if (proposal.executed) {\r\n            return ProposalState.Executed;\r\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\r\n            return ProposalState.Expired;\r\n        } else {\r\n            return ProposalState.Queued;\r\n        }\r\n    }\r\n\r\n    /**\r\n      * @notice Cast a vote for a proposal\r\n      * @param proposalId The id of the proposal to vote on\r\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\r\n      */\r\n    function castVote(uint proposalId, uint8 support) external {\r\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \"\");\r\n    }\r\n\r\n    /**\r\n      * @notice Cast a vote for a proposal with a reason\r\n      * @param proposalId The id of the proposal to vote on\r\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\r\n      * @param reason The reason given for the vote by the voter\r\n      */\r\n    function castVoteWithReason(uint proposalId, uint8 support, string calldata reason) external {\r\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\r\n    }\r\n\r\n    /**\r\n      * @notice Cast a vote for a proposal by signature\r\n      * @dev External function that accepts EIP-712 signatures for voting on proposals.\r\n      */\r\n    function castVoteBySig(uint proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) external {\r\n        bytes32 domainSeparator = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainIdInternal(), address(this)));\r\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\r\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\r\n        address signatory = ecrecover(digest, v, r, s);\r\n        require(signatory != address(0), \"GovernorBravo::castVoteBySig: invalid signature\");\r\n        emit VoteCast(signatory, proposalId, support, castVoteInternal(signatory, proposalId, support), \"\");\r\n    }\r\n\r\n    /**\r\n      * @notice Internal function that caries out voting logic\r\n      * @param voter The voter that is casting their vote\r\n      * @param proposalId The id of the proposal to vote on\r\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\r\n      * @return The number of votes cast\r\n      */\r\n    function castVoteInternal(address voter, uint proposalId, uint8 support) internal returns (uint96) {\r\n        require(state(proposalId) == ProposalState.Active, \"GovernorBravo::castVoteInternal: voting is closed\");\r\n        require(support <= 2, \"GovernorBravo::castVoteInternal: invalid vote type\");\r\n        Proposal storage proposal = proposals[proposalId];\r\n        Receipt storage receipt = proposal.receipts[voter];\r\n        require(receipt.hasVoted == false, \"GovernorBravo::castVoteInternal: voter already voted\");\r\n        uint96 votes = uni.getPriorVotes(voter, proposal.startBlock);\r\n\r\n        if (support == 0) {\r\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\r\n        } else if (support == 1) {\r\n            proposal.forVotes = add256(proposal.forVotes, votes);\r\n        } else if (support == 2) {\r\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\r\n        }\r\n\r\n        receipt.hasVoted = true;\r\n        receipt.support = support;\r\n        receipt.votes = votes;\r\n\r\n        return votes;\r\n    }\r\n\r\n    /**\r\n      * @notice Admin function for setting the voting delay\r\n      * @param newVotingDelay new voting delay, in blocks\r\n      */\r\n    function _setVotingDelay(uint newVotingDelay) external {\r\n        require(msg.sender == admin, \"GovernorBravo::_setVotingDelay: admin only\");\r\n        require(newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY, \"GovernorBravo::_setVotingDelay: invalid voting delay\");\r\n        uint oldVotingDelay = votingDelay;\r\n        votingDelay = newVotingDelay;\r\n\r\n        emit VotingDelaySet(oldVotingDelay,votingDelay);\r\n    }\r\n\r\n    /**\r\n      * @notice Admin function for setting the voting period\r\n      * @param newVotingPeriod new voting period, in blocks\r\n      */\r\n    function _setVotingPeriod(uint newVotingPeriod) external {\r\n        require(msg.sender == admin, \"GovernorBravo::_setVotingPeriod: admin only\");\r\n        require(newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD, \"GovernorBravo::_setVotingPeriod: invalid voting period\");\r\n        uint oldVotingPeriod = votingPeriod;\r\n        votingPeriod = newVotingPeriod;\r\n\r\n        emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\r\n    }\r\n\r\n    /**\r\n      * @notice Admin function for setting the proposal threshold\r\n      * @dev newProposalThreshold must be greater than the hardcoded min\r\n      * @param newProposalThreshold new proposal threshold\r\n      */\r\n    function _setProposalThreshold(uint newProposalThreshold) external {\r\n        require(msg.sender == admin, \"GovernorBravo::_setProposalThreshold: admin only\");\r\n        require(newProposalThreshold >= MIN_PROPOSAL_THRESHOLD && newProposalThreshold <= MAX_PROPOSAL_THRESHOLD, \"GovernorBravo::_setProposalThreshold: invalid proposal threshold\");\r\n        uint oldProposalThreshold = proposalThreshold;\r\n        proposalThreshold = newProposalThreshold;\r\n\r\n        emit ProposalThresholdSet(oldProposalThreshold, proposalThreshold);\r\n    }\r\n\r\n    /**\r\n      * @notice Initiate the GovernorBravo contract\r\n      * @dev Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count\r\n      * @param proposalCount proposal id to initialize from\r\n      */\r\n    function _initiate(uint proposalCount) external {\r\n        require(msg.sender == admin, \"GovernorBravo::_initiate: admin only\");\r\n        require(initialProposalId == 0, \"GovernorBravo::_initiate: can only initiate once\");\r\n        initialProposalId = proposalCount;\r\n        timelock.acceptAdmin();\r\n    }\r\n\r\n    /**\r\n      * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\r\n      * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\r\n      * @param newPendingAdmin New pending admin.\r\n      */\r\n    function _setPendingAdmin(address newPendingAdmin) external {\r\n        // Check caller = admin\r\n        require(msg.sender == admin, \"GovernorBravo:_setPendingAdmin: admin only\");\r\n\r\n        // Save current value, if any, for inclusion in log\r\n        address oldPendingAdmin = pendingAdmin;\r\n\r\n        // Store pendingAdmin with value newPendingAdmin\r\n        pendingAdmin = newPendingAdmin;\r\n\r\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\r\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\r\n    }\r\n\r\n    /**\r\n      * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\r\n      * @dev Admin function for pending admin to accept role and update admin\r\n      */\r\n    function _acceptAdmin() external {\r\n        // Check caller is pendingAdmin and pendingAdmin ≠ address(0)\r\n        require(msg.sender == pendingAdmin && msg.sender != address(0), \"GovernorBravo:_acceptAdmin: pending admin only\");\r\n\r\n        // Save current values for inclusion in log\r\n        address oldAdmin = admin;\r\n        address oldPendingAdmin = pendingAdmin;\r\n\r\n        // Store admin with value pendingAdmin\r\n        admin = pendingAdmin;\r\n\r\n        // Clear the pending value\r\n        pendingAdmin = address(0);\r\n\r\n        emit NewAdmin(oldAdmin, admin);\r\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\r\n    }\r\n\r\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\r\n        uint c = a + b;\r\n        require(c >= a, \"addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\r\n        require(b <= a, \"subtraction underflow\");\r\n        return a - b;\r\n    }\r\n\r\n    function getChainIdInternal() internal pure returns (uint) {\r\n        uint chainId;\r\n        assembly { chainId := chainid() }\r\n        return chainId;\r\n    }\r\n}"
          },
          {
            "id": 1,
            "path": "contracts/GovernorBravoInterfaces.sol",
            "name": "GovernorBravoInterfaces.sol",
            "source": "pragma solidity ^0.5.16;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\ncontract GovernorBravoEvents {\r\n    /// @notice An event emitted when a new proposal is created\r\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\r\n\r\n    /// @notice An event emitted when a vote has been cast on a proposal\r\n    /// @param voter The address which casted a vote\r\n    /// @param proposalId The proposal id which was voted on\r\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\r\n    /// @param votes Number of votes which were cast by the voter\r\n    /// @param reason The reason given for the vote by the voter\r\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\r\n\r\n    /// @notice An event emitted when a proposal has been canceled\r\n    event ProposalCanceled(uint id);\r\n\r\n    /// @notice An event emitted when a proposal has been queued in the Timelock\r\n    event ProposalQueued(uint id, uint eta);\r\n\r\n    /// @notice An event emitted when a proposal has been executed in the Timelock\r\n    event ProposalExecuted(uint id);\r\n\r\n    /// @notice An event emitted when the voting delay is set\r\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\r\n\r\n    /// @notice An event emitted when the voting period is set\r\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\r\n\r\n    /// @notice Emitted when implementation is changed\r\n    event NewImplementation(address oldImplementation, address newImplementation);\r\n\r\n    /// @notice Emitted when proposal threshold is set\r\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\r\n\r\n    /// @notice Emitted when pendingAdmin is changed\r\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\r\n\r\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\r\n    event NewAdmin(address oldAdmin, address newAdmin);\r\n}\r\n\r\ncontract GovernorBravoDelegatorStorage {\r\n    /// @notice Administrator for this contract\r\n    address public admin;\r\n\r\n    /// @notice Pending administrator for this contract\r\n    address public pendingAdmin;\r\n\r\n    /// @notice Active brains of Governor\r\n    address public implementation;\r\n}\r\n\r\n\r\n/**\r\n * @title Storage for Governor Bravo Delegate\r\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\r\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\r\n * GovernorBravoDelegateStorageVX.\r\n */\r\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\r\n\r\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\r\n    uint public votingDelay;\r\n\r\n    /// @notice The duration of voting on a proposal, in blocks\r\n    uint public votingPeriod;\r\n\r\n    /// @notice The number of votes required in order for a voter to become a proposer\r\n    uint public proposalThreshold;\r\n\r\n    /// @notice Initial proposal id set at become\r\n    uint public initialProposalId;\r\n\r\n    /// @notice The total number of proposals\r\n    uint public proposalCount;\r\n\r\n    /// @notice The address of the Uniswap Protocol Timelock\r\n    TimelockInterface public timelock;\r\n\r\n    /// @notice The address of the Uniswap governance token\r\n    UniInterface public uni;\r\n\r\n    /// @notice The official record of all proposals ever proposed\r\n    mapping (uint => Proposal) public proposals;\r\n\r\n    /// @notice The latest proposal for each proposer\r\n    mapping (address => uint) public latestProposalIds;\r\n\r\n\r\n    struct Proposal {\r\n        /// @notice Unique id for looking up a proposal\r\n        uint id;\r\n\r\n        /// @notice Creator of the proposal\r\n        address proposer;\r\n\r\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\r\n        uint eta;\r\n\r\n        /// @notice the ordered list of target addresses for calls to be made\r\n        address[] targets;\r\n\r\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\r\n        uint[] values;\r\n\r\n        /// @notice The ordered list of function signatures to be called\r\n        string[] signatures;\r\n\r\n        /// @notice The ordered list of calldata to be passed to each call\r\n        bytes[] calldatas;\r\n\r\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\r\n        uint startBlock;\r\n\r\n        /// @notice The block at which voting ends: votes must be cast prior to this block\r\n        uint endBlock;\r\n\r\n        /// @notice Current number of votes in favor of this proposal\r\n        uint forVotes;\r\n\r\n        /// @notice Current number of votes in opposition to this proposal\r\n        uint againstVotes;\r\n\r\n        /// @notice Current number of votes for abstaining for this proposal\r\n        uint abstainVotes;\r\n\r\n        /// @notice Flag marking whether the proposal has been canceled\r\n        bool canceled;\r\n\r\n        /// @notice Flag marking whether the proposal has been executed\r\n        bool executed;\r\n\r\n        /// @notice Receipts of ballots for the entire set of voters\r\n        mapping (address => Receipt) receipts;\r\n    }\r\n\r\n    /// @notice Ballot receipt record for a voter\r\n    struct Receipt {\r\n        /// @notice Whether or not a vote has been cast\r\n        bool hasVoted;\r\n\r\n        /// @notice Whether or not the voter supports the proposal or abstains\r\n        uint8 support;\r\n\r\n        /// @notice The number of votes the voter had, which were cast\r\n        uint96 votes;\r\n    }\r\n\r\n    /// @notice Possible states that a proposal may be in\r\n    enum ProposalState {\r\n        Pending,\r\n        Active,\r\n        Canceled,\r\n        Defeated,\r\n        Succeeded,\r\n        Queued,\r\n        Expired,\r\n        Executed\r\n    }\r\n}\r\n\r\ninterface TimelockInterface {\r\n    function delay() external view returns (uint);\r\n    function GRACE_PERIOD() external view returns (uint);\r\n    function acceptAdmin() external;\r\n    function queuedTransactions(bytes32 hash) external view returns (bool);\r\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\r\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\r\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\r\n}\r\n\r\ninterface UniInterface {\r\n    function getPriorVotes(address account, uint blockNumber) external view returns (uint96);\r\n}\r\n\r\ninterface GovernorAlpha {\r\n    /// @notice The total number of proposals\r\n    function proposalCount() external returns (uint);\r\n}"
          }
        ],
        "abi": [
          {
            "type": "constructor",
            "name": "",
            "constant": false,
            "anonymous": false,
            "inputs": null,
            "outputs": null
          },
          {
            "type": "function",
            "name": "_setVotingDelay",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "DOMAIN_TYPEHASH",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_initiate",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalCount",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "queue",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "proposalThreshold",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "initialProposalId",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "castVoteBySig",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "v",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "r",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              },
              {
                "name": "s",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "getReceipt",
            "constant": true,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "tuple",
                "storage_location": "default",
                "components": [
                  {
                    "name": "hasVoted",
                    "type": "bool",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "bool"
                    }
                  },
                  {
                    "name": "support",
                    "type": "uint8",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  },
                  {
                    "name": "votes",
                    "type": "uint96",
                    "storage_location": "default",
                    "components": null,
                    "offset": 0,
                    "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "indexed": false,
                    "simple_type": {
                      "type": "uint"
                    }
                  }
                ],
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false
              }
            ]
          },
          {
            "type": "function",
            "name": "name",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setVotingPeriod",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "admin",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setProposalThreshold",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "castVote",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "votingPeriod",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MIN_VOTING_PERIOD",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "quorumVotes",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "votingDelay",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "BALLOT_TYPEHASH",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "bytes32",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bytes"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "uni",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "state",
            "constant": true,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposals",
            "constant": true,
            "anonymous": false,
            "inputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "cancel",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "_acceptAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [],
            "outputs": []
          },
          {
            "type": "function",
            "name": "latestProposalIds",
            "constant": true,
            "anonymous": false,
            "inputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposalCount",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_PROPOSAL_THRESHOLD",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_VOTING_DELAY",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MIN_PROPOSAL_THRESHOLD",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "execute",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "timelock",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "initialize",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "timelock_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "uni_",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "votingPeriod_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votingDelay_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposalThreshold_",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "castVoteWithReason",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "function",
            "name": "MIN_VOTING_DELAY",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "pendingAdmin",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "proposalMaxOperations",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "getActions",
            "constant": true,
            "anonymous": false,
            "inputs": [
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": [
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "propose",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "MAX_VOTING_PERIOD",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "implementation",
            "constant": true,
            "anonymous": false,
            "inputs": [],
            "outputs": [
              {
                "name": "",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ]
          },
          {
            "type": "function",
            "name": "_setPendingAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": []
          },
          {
            "type": "event",
            "name": "VotingPeriodSet",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingPeriod",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewPendingAdmin",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newPendingAdmin",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCanceled",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "NewImplementation",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "newImplementation",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalExecuted",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalCreated",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "description",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VoteCast",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "voter",
                "type": "address",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": true,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "proposalId",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "support",
                "type": "uint8",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "votes",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "reason",
                "type": "string",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "string"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalQueued",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "VotingDelaySet",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newVotingDelay",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          },
          {
            "type": "event",
            "name": "ProposalThresholdSet",
            "constant": false,
            "anonymous": false,
            "inputs": [
              {
                "name": "oldProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "newProposalThreshold",
                "type": "uint256",
                "storage_location": "default",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              }
            ],
            "outputs": null
          }
        ],
        "raw_abi": null,
        "states": [
          {
            "name": "implementation",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000002",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "votingPeriod",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000004",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "proposalThreshold",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000005",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "proposalCount",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000007",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "timelock",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000008",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "proposals",
            "type": "mapping (uint256 => tuple)",
            "storage_location": "memory",
            "components": [
              {
                "name": "id",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "proposer",
                "type": "address",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "address"
                }
              },
              {
                "name": "eta",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "targets",
                "type": "address[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "address"
                  }
                }
              },
              {
                "name": "values",
                "type": "uint256[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "uint"
                  }
                }
              },
              {
                "name": "signatures",
                "type": "string[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "string"
                  }
                }
              },
              {
                "name": "calldatas",
                "type": "bytes[]",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "slice",
                  "nested_type": {
                    "type": "bytes"
                  }
                }
              },
              {
                "name": "startBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "endBlock",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "forVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "againstVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "abstainVotes",
                "type": "uint256",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "uint"
                }
              },
              {
                "name": "canceled",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "executed",
                "type": "bool",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false,
                "simple_type": {
                  "type": "bool"
                }
              },
              {
                "name": "receipts",
                "type": "mapping (address => (bool,uint8,uint96))",
                "storage_location": "memory",
                "components": null,
                "offset": 0,
                "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "indexed": false
              }
            ],
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000a",
            "indexed": false
          },
          {
            "name": "admin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "pendingAdmin",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000001",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "votingDelay",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000003",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "initialProposalId",
            "type": "uint256",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000006",
            "indexed": false,
            "simple_type": {
              "type": "uint"
            }
          },
          {
            "name": "uni",
            "type": "address",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x0000000000000000000000000000000000000000000000000000000000000009",
            "indexed": false,
            "simple_type": {
              "type": "address"
            }
          },
          {
            "name": "latestProposalIds",
            "type": "mapping (address => uint256)",
            "storage_location": "storage",
            "components": null,
            "offset": 0,
            "index": "0x000000000000000000000000000000000000000000000000000000000000000b",
            "indexed": false
          }
        ]
      },
      "creation_block": 0,
      "creation_tx": "",
      "creator_address": "",
      "created_at": "2021-08-20T00:59:45Z",
      "number_of_watches": null,
      "language": "solidity",
      "in_project": false,
      "number_of_files": 2
    }
  ],
  "generated_access_list": [
    {
      "address": "0x53a328f4086d7c0f1fa19e594c9b842125263026"
    },
    {
      "address": "0xd73a92be73efbfcf3854433a5fcbabf9c1316073"
    },
    {
      "address": "0x1a9c8182c09f50c8318d769245bea52c32be35bc",
      "storage_keys": [
        "0xf24571af1c9c9feb8fb4e4db9131ce568fa73255bfb5ff8dc04164f9430405a8"
      ]
    },
    {
      "address": "0x408ed6354d4973f66138c91495f2f2fcbd8724c3",
      "storage_keys": [
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0442",
        "0x0000000000000000000000000000000000000000000000000000000000000008",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0445",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0447",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f043d",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f043e",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0446",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0444",
        "0x0000000000000000000000000000000000000000000000000000000000000007",
        "0xb3569174ca605aeef264a9f01151dace4275a70316034aaf090d8468560f0443",
        "0x0000000000000000000000000000000000000000000000000000000000000002",
        "0x0000000000000000000000000000000000000000000000000000000000000006"
      ]
    }
  ]
}